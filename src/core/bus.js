// Generated by CoffeeScript 1.7.1
(function() {
  var RemoteBus;

  RemoteBus = (function() {
    function RemoteBus(sConnectionString) {}

    RemoteBus.prototype.postData = function(oMessage) {};

    return RemoteBus;

  })();

  inSide.signal = {
    meta: {
      OID: 'ObjectID',
      BID: 'BusID'
    },
    name: 'SignalName',
    data: {},
    ext: {}
  };

  inSide.Bus = (function() {
    function Bus() {
      this.__services = [];
      this.__buses = [];
      this.__connectionTable = {};
    }

    Bus.prototype.extend = function(oService) {
      return this.__services.push(oService);
    };

    Bus.prototype.__callServices = function(sMethodName, oData) {
      var result, serviceIndex, _i, _ref;
      result = oData;
      if (this.__services.length) {
        for (serviceIndex = _i = _ref = this.__services.length - 1; _ref <= 0 ? _i <= 0 : _i >= 0; serviceIndex = _ref <= 0 ? ++_i : --_i) {
          if (this.__services[serviceIndex][sMethodName]) {
            result = this.__services[serviceIndex][sMethodName](result);
          }
        }
      }
      return result;
    };

    Bus.prototype.connect = function(sConnectionString) {
      var bus;
      bus = new RemoteBus(sConnectionString);
      if (bus) {
        return this.__buses.push(bus);
      }
    };

    Bus.prototype.__resend = function(oMessage) {
      oMessage = this.__callServices('resend_PreDispatch', oMessage);
      return this.__buses.forEach(function(bus) {
        if (this.__callServices('resend_SelectBus', bus)) {
          return this.prototype.__sendToBus(bus, oMessage);
        }
      });
    };

    Bus.prototype.__sendToBus = function(oRemoteBus, oMessage) {
      oMessage = this.__callServices('resend_PostDispatch', {
        bus: oRemoteBus,
        message: oMessage
      });
      return oRemoteBus.postData(oMessage);
    };

    Bus.prototype.handleSignal = function(oMessage, isRemote) {
      if (isRemote == null) {
        isRemote = false;
      }
      this.__callServices('handleSignal_SelectObject', oMessage);
      if (!isRemote) {
        return this.__resend(oMessage);
      }
    };

    return Bus;

  })();

}).call(this);

// Generated by CoffeeScript 1.7.1
(function() {
  var API,
    __slice = [].slice;

  API = (function() {
    API.prototype.toString = function() {
      return 'apiModule';
    };

    function API() {
      CONNECT('SERVER_REQUEST', '_prepareRequest', this);
    }

    API.prototype.setUrl = function(gatewayURL) {
      this.gatewayURL = gatewayURL;
    };

    API.prototype.stdError = function(oResponse) {
      return DEBUG(oResponse);
    };

    API.prototype._prepareRequest = function(_arg) {
      var args, error, sig, success;
      sig = _arg.sig, args = _arg.args;
      success = function(msg) {
        return EMIT(msg.signal, msg.body ? msg.body : {});
      };
      error = function(msg) {
        return EMIT('ERROR', msg.body ? msg.body : {});
      };
      return this.call(sig, args, success, error);
    };

    API.prototype._sendRequest = function(sRequestData, fSuccess, fError) {
      var errorHandler, successHandler;
      if (fError == null) {
        fError = this.stdError;
      }
      successHandler = function(oRequest) {
        var handler, result;
        result = JSON.parse(oRequest.responseText);
        handler = result.status === 0 ? fSuccess : fError;
        return typeof handler === "function" ? handler(result.data) : void 0;
      };
      errorHandler = function(oRequest) {
        return typeof fError === "function" ? fError(oRequest.statusText) : void 0;
      };
      return inSide.Ajax.post(this.gatewayURL, sRequestData, successHandler, errorHandler);
    };

    API.prototype.call = function(sSignature, oArgs, fSuccess, fError) {
      var bus, method, module, requestData, success, _i, _ref;
      _ref = sSignature.split('.'), module = 2 <= _ref.length ? __slice.call(_ref, 0, _i = _ref.length - 1) : (_i = 0, []), method = _ref[_i++];
      requestData = {
        mod: module.join('.'),
        method: method,
        data: oArgs,
        meta: {}
      };
      if (this.onBeforeSend != null) {
        requestData = this.onBeforeSend(requestData);
      }
      if (inSideConf.useWSAPI === 1) {
        requestData.type = 'api';
        requestData.seq = inSide.__nextID();
        success = function(args) {
          if (args.status === 1) {
            return typeof fError === "function" ? fError(args.data) : void 0;
          } else {
            return typeof fSuccess === "function" ? fSuccess(args.data) : void 0;
          }
        };

        /*
        EMIT_AND_WAIT({
           toString:->'wsapi'
           __id__:requestData.seq
        },'WSAPI_REQUEST',requestData,success)
         */
        bus = getBus('wsbus');
        return bus.apiRequest2(requestData, success, fError);
      } else {
        requestData = inSide.Url.encode(requestData);
        return this._sendRequest(requestData, fSuccess, fError);
      }
    };

    API.prototype.chain = function(oRequests, fSuccess, fError) {
      var requestData, requests;
      requests = [];
      oRequests.forEach(function(request) {
        var method, module, _i, _ref;
        _ref = request[1].split('.'), module = 2 <= _ref.length ? __slice.call(_ref, 0, _i = _ref.length - 1) : (_i = 0, []), method = _ref[_i++];
        return requests = requests.concat(request[2].map(function(args) {
          return {
            name: request[0],
            mod: module.join('.'),
            method: method,
            args: args
          };
        }));
      });
      requestData = {
        chain: 1,
        requests: requests
      };
      if (this.onBeforeSend != null) {
        requestData = this.onBeforeSend(requestData);
      }
      requestData = inSide.Url.encode(requestData);
      return this._sendRequest(requestData, fSuccess, fError);
    };

    return API;

  })();

  inSide.__Register('API', API);

}).call(this);

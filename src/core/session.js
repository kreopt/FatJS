// Generated by CoffeeScript 1.7.1
(function() {
  inSide.Session = (function() {
    function Session(type, ns) {
      if (type == null) {
        type = 'local';
      }
      if (ns == null) {
        ns = 'global';
      }
      this.storage = type === 'local' ? localStorage : sessionStorage;
      this.ns = ns;
    }

    Session.prototype._storageName = function(sParamName, sNamespace) {
      return (sNamespace ? sNamespace : this.ns) + ':' + sParamName;
    };

    Session.prototype.get = function(sParameter, sNamespace) {
      var res, storageName;
      storageName = this._storageName(sParameter, sNamespace);
      res = this.storage[storageName];
      if (res !== null) {
        res = res === "undefined" || res === void 0 ? void 0 : JSON.parse(res);
      }
      return res;
    };

    Session.prototype.set = function(sParameter, oValue, sNamespace) {
      var storageName;
      storageName = this._storageName(sParameter, sNamespace);
      return this.storage[storageName] = JSON.stringify(oValue);
    };

    Session.prototype.remove = function(sParameter, sNamespace) {
      return this.storage.removeItem(this._storageName(sParameter, sNamespace));
    };

    Session.prototype.clearNS = function(sNamespace) {
      var rec, toDel, _i, _len, _results;
      toDel = [];
      for (rec in this.storage) {
        if (rec.indexOf(sNamespace + ':') === 0) {
          toDel.push(rec);
        }
      }
      _results = [];
      for (_i = 0, _len = toDel.length; _i < _len; _i++) {
        rec = toDel[_i];
        _results.push(this.storage.removeItem(rec));
      }
      return _results;
    };

    Session.prototype.clear = function() {
      return this.storage.clear();
    };

    return Session;

  })();

}).call(this);

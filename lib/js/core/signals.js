// Generated by CoffeeScript 1.3.1
(function() {
  var addConnection, invoke, removeConnection, __connectionTable;

  __connectionTable = {};

  addConnection = function(sSignal, sSlot, oReceiver, fSlot) {
    var objectName;
    objectName = oReceiver.toString();
    if (!(__connectionTable[sSignal] != null)) {
      __connectionTable[sSignal] = {};
    }
    if (!(__connectionTable[sSignal][objectName] != null)) {
      __connectionTable[sSignal][objectName] = {
        instance: oReceiver,
        slots: {}
      };
    }
    if (fSlot) {
      __connectionTable[sSignal][objectName].slots[sSlot] = fSlot;
    } else {
      __connectionTable[sSignal][objectName].slots[sSlot] = oReceiver[sSlot];
    }
    return sSlot;
  };

  removeConnection = function(sSignal, sSlot, oReceiver) {
    var objectName, _ref, _ref1;
    objectName = oReceiver.toString();
    if ((_ref = __connectionTable[sSignal]) != null ? (_ref1 = _ref[objectName]) != null ? _ref1.slots[sSlot] : void 0 : void 0) {
      delete __connectionTable[sSignal][objectName].slots[sSlot];
    } else {
      return;
    }
    if (Object.keys(__connectionTable[sSignal][objectName].slots).length === 0) {
      delete __connectionTable[sSignal][objectName];
      if (Object.keys(__connectionTable[sSignal]).length) {
        return delete __connectionTable[sSignal];
      }
    }
  };

  invoke = function(sSignal, oData) {
    var appName, connectionInfo, slot, slotName, _ref, _results;
    if (__connectionTable[sSignal]) {
      _ref = __connectionTable[sSignal];
      _results = [];
      for (appName in _ref) {
        connectionInfo = _ref[appName];
        _results.push((function() {
          var _ref1, _results1;
          _ref1 = connectionInfo.slots;
          _results1 = [];
          for (slotName in _ref1) {
            slot = _ref1[slotName];
            _results1.push(slot.call(connectionInfo.instance, oData));
          }
          return _results1;
        })());
      }
      return _results;
    }
  };

  window.DISCONNECT = function(sSignal, sSlot, oReceiver) {
    return removeConnection(sSignal, sSlot, oReceiver);
  };

  window.CONNECT = function(sSignal, sSlot, oReceiver) {
    var fSlot;
    if (typeof sSlot === typeof (function() {})) {
      fSlot = sSlot;
      sSlot = JAFW.nextID();
    } else {
      if (!(oReceiver[sSlot] != null)) {
        throw "No such slot: " + sSlot;
      }
    }
    return addConnection(sSignal, sSlot, oReceiver, fSlot);
  };

  window.EMIT = function(sSignal, oArgs, oSender) {
    return invoke(sSignal, oArgs, oSender);
  };

}).call(this);

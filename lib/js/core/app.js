// Generated by CoffeeScript 1.3.1
(function() {
  var $A, $C, $F, $I, $N, JafApplication, JafComponent, appLoader, mix, window,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  if (!(typeof window !== "undefined" && window !== null)) {
    window = self;
  }

  Object.defineProperty(window, 'CHILD_WINDOWS', {
    value: {},
    writable: true,
    configurable: false
  });

  window.DOCUMENT = document;

  JAFW['apps'] = {};

  JAFW['cmp'] = {};

  JAFW['forms'] = {};

  JAFW['ifc'] = {};

  JAFW['nsp'] = {};

  $N = JAFW['nsp'];

  $A = JAFW['apps'];

  $F = JAFW['forms'];

  $I = JAFW['ifc'];

  $N = JAFW['nsp'];

  $C = JAFW['cmp'];

  appLoader = (function() {

    function appLoader() {}

    appLoader.prototype.queue = {};

    appLoader.prototype.included = {};

    appLoader.prototype.request = {};

    appLoader.prototype.load = function(oApp, isApp) {
      var appName, queue;
      queue = appLoader.prototype.queue;
      appName = oApp.prototype.__name;
      if (!(queue[appName] != null)) {
        queue[appName] = {
          status: 0,
          required: [],
          requiredBy: {},
          apps: [],
          forms: {},
          isApp: isApp
        };
        appLoader.prototype.included[appName] = 1;
        if (isApp) {
          queue[appName].apps.push(oApp);
        }
      }
      oApp.prototype.__using.forEach(function(reqName) {
        if (!(appLoader.prototype.included[reqName] != null)) {
          appLoader.prototype.included[reqName] = 1;
          return queue[appName].required.push(reqName);
        }
      });
      queue[appName].forms = oApp.prototype.__forms;
      if (oApp.prototype.__css) {
        if (JAFW.AppCssPath) {
          IMPORTCSS(oApp.prototype.__css, JAFW.AppCssPath, appName);
        } else {
          DEBUG('JAFW.AppCssPath is not defined!');
        }
      }
      appLoader.prototype.request[appName] = {};
      oApp.prototype.__using.forEach(function(using) {
        if (!(queue[using] != null)) {
          queue[using] = {
            status: 0,
            required: [],
            requiredBy: {},
            forms: {}
          };
        }
        return queue[using].requiredBy[appName] = 1;
      });
      return appLoader.prototype.scripts(appName);
    };

    appLoader.prototype.check = function(sName) {
      var req;
      if (appLoader.prototype.queue[sName].required.every(function(el) {
        return appLoader.prototype.queue[el].status === 1;
      })) {
        appLoader.prototype.queue[sName].status = 1;
        for (req in appLoader.prototype.queue[sName].requiredBy) {
          appLoader.prototype.check(req);
        }
        if (appLoader.prototype.queue[sName].isApp) {
          return appLoader.prototype.forms(sName);
        }
      }
    };

    appLoader.prototype.scripts = function(sName) {
      var request;
      request = appLoader.prototype.queue[sName].required.filter(function(req) {
        return appLoader.prototype.queue[sName].status === 0 && (appLoader.prototype.included[sName] != null);
      }).map(function(req) {
        return ["" + (req.replace(/\./g, '/')) + "/index"];
      });
      if (!JAFW.AppPath) {
        throw 'JAFW.AppPath is not defined!';
      }
      if (Object.keys(request).length === 0) {
        return appLoader.prototype.check(sName);
      } else {
        return IMPORT(request, "" + JAFW.ScriptPath);
      }
    };

    appLoader.prototype._getFormList = function(sName, oList) {
      appLoader.prototype.queue[sName].required.forEach(function(req) {
        return appLoader.prototype._getFormList(req, oList);
      });
      if (Object.keys(appLoader.prototype.queue[sName].forms).length) {
        return oList[sName] = appLoader.prototype.queue[sName].forms;
      }
    };

    appLoader.prototype.forms = function(sName) {
      var appName, formList, request, templatesLoaded, toLoad,
        _this = this;
      request = appLoader.prototype.request[sName];
      toLoad = [];
      appLoader.prototype._getFormList(sName, request);
      for (appName in request) {
        formList = request[appName];
        formList.filter(function(form) {
          return !$F[form];
        }).forEach(function(form) {
          return toLoad.push(form.replace('@', appName.replace(/\./g, '/') + '/'));
        });
      }
      templatesLoaded = function(oResponse) {
        oResponse.filter(function(tpl) {
          return !tpl.status;
        }).forEach(function(tpl) {
          tpl = tpl.data;
          $F[tpl.path] = tpl.content;
          return JAFW.RenderEngine.loadTemplate(tpl.path, tpl.content);
        });
        if (appLoader.prototype.queue[sName].apps) {
          return appLoader.prototype.start(sName);
        }
      };
      if (Object.keys(toLoad).length) {
        if (JAFW.AppTemplateLoadEngine != null) {
          return JAFW.AppTemplateLoadEngine(toLoad, templatesLoaded);
        } else {
          throw 'JAFW.AppTemplateLoadEngine(oRequest,fCallback(tplList)) is not defined!';
        }
      } else {
        return templatesLoaded([]);
      }
    };

    appLoader.prototype.start = function(sName) {
      appLoader.prototype.queue[sName].apps.forEach(function(app) {
        var container, setup;
        if (JAFW.init[sName]) {
          container = $s('#' + JAFW.init[sName].container);
          setup = JAFW.init[sName].setup;
        }
        return new app(container, setup);
      });
      if (JAFW.init[sName]) {
        return delete JAFW.init[sName];
      }
    };

    return appLoader;

  })();

  JAFW.running = {};

  window.APPLICATION = function(sName, oBody) {
    if (!oBody) {
      oBody = {};
    }
    JAFW.running[sName] = {};
    $A[sName] = (function(_super) {

      __extends(_Class, _super);

      function _Class(container, __setup) {
        var _ref;
        this.container = container;
        this.__setup = __setup;
        this.connectionList = [];
        this.UID = JAFW.nextID();
        JAFW.running[sName][this.UID] = this;
        if (typeof this.__setup === "function") {
          this.__setup(this.UID);
        }
        EMIT('APP_READY', {
          uid: this.UID,
          name: sName,
          container: (_ref = this.container) != null ? _ref.id : void 0
        });
        if (typeof this._init === "function") {
          this._init();
        }
      }

      _Class.prototype.toString = function() {
        return sName;
      };

      return _Class;

    })(JafApplication);
    mix($A[sName].prototype, oBody);
    if (!$A[sName].prototype.__forms) {
      $A[sName].prototype.__forms = [];
    }
    if (!$A[sName].prototype.__using) {
      $A[sName].prototype.__using = [];
    }
    $A[sName].prototype.__name = sName;
    return appLoader.prototype.load($A[sName], true);
  };

  window.PROPERTY = function(sSignature, vValue) {
    var appName, delimiterIndex, propName;
    delimiterIndex = sSignature.lastIndexOf(APP_DELIMITER);
    appName = sSignature.substr(0, delimiterIndex);
    propName = sSignature.substr(delimiterIndex + 1);
    assert(propName != null, 'Invalid application signature ' + sSignature + '!');
    if (!($A[appName] != null)) {
      return DEBUG('There is no application with name ' + appName + '! Property assignment skipped.');
    } else {
      if (typeof vValue === typeof (function() {})) {
        return $A[appName].prototype[propName] = vValue;
      } else {
        return Object.defineProperty($A[appName].prototype, propName, vValue);
      }
    }
  };

  window.CPROPERTY = function(sSignature, vValue) {
    var appName, delimiterIndex, propName;
    delimiterIndex = sSignature.lastIndexOf(APP_DELIMITER);
    appName = sSignature.substr(0, delimiterIndex);
    propName = sSignature.substr(delimiterIndex + 1);
    assert(propName != null, 'Invalid application signature ' + sSignature + '!');
    if (!($C[appName] != null)) {
      return DEBUG('There is no application with name ' + appName + '! Property assignment skipped.');
    } else {
      if (typeof vValue === typeof (function() {})) {
        return $C[appName].prototype[propName] = vValue;
      } else {
        return Object.defineProperty($C[appName].prototype, propName, vValue);
      }
    }
  };

  window.CMP = function(sName, oBody) {
    JAFW.running[sName] = {};
    $C[sName] = (function(_super) {

      __extends(_Class, _super);

      function _Class(oConfig) {
        this.connectionList = [];
        this.UID = JAFW.nextID();
        JAFW.running[sName][this.UID] = this;
        if (typeof this.__setup === "function") {
          this.__setup();
        }
        if (typeof oConfig !== typeof {}) {
          oConfig = {};
        }
        this.config = oConfig;
        this.__ = function(sName, oVal) {
          return Object.defineProperty(this, sName, oVal);
        };
        if (typeof this._init === "function") {
          this._init(oConfig);
        }
      }

      return _Class;

    })(JafComponent);
    mix($C[sName].prototype, oBody);
    if (!$C[sName].prototype.__forms) {
      $C[sName].prototype.__forms = [];
    }
    if (!$C[sName].prototype.__using) {
      $C[sName].prototype.__using = [];
    }
    $C[sName].prototype.__name = sName;
    return appLoader.prototype.load($C[sName]);
  };

  JAFW.init = {};

  window.RUN = function(sName, sContainer, fInitCallback) {
    if (!(JAFW.AppPath != null)) {
      throw 'JAFW.AppPath is not defined!';
    }
    if (sContainer || fInitCallback) {
      JAFW.init[sName] = {
        container: sContainer,
        setup: fInitCallback
      };
    }
    if (!appLoader.prototype.queue[sName]) {
      return IMPORT([['index']], "" + JAFW.AppPath + "/" + sName);
    } else {
      return appLoader.prototype.start(sName);
    }
  };

  window.INSTANCE = function(sName, oConfig) {
    return new $C[sName](oConfig);
  };

  mix = function(oObject, oMixin) {
    var key, val, _results;
    _results = [];
    for (key in oMixin) {
      val = oMixin[key];
      _results.push(oObject[key] = val);
    }
    return _results;
  };

  window.RENDER = function(sFormName, DOMContainer, oData) {
    var rendered;
    if (!(oData != null)) {
      oData = {};
    }
    try {
      rendered = JAFW.RenderEngine.render(sFormName, oData);
    } catch (expection) {
      rendered = '';
      DEBUG('Render error: ' + sFormName + ' (' + expection + ')');
    }
    if (DOMContainer !== null) {
      return DOMContainer.innerHTML = rendered;
    } else {
      return rendered;
    }
  };

  window.RENDERSEL = function(sFormName, sSelector, oData) {
    var container, containers, _i, _len, _results;
    containers = $a(sSelector);
    _results = [];
    for (_i = 0, _len = containers.length; _i < _len; _i++) {
      container = containers[_i];
      _results.push(RENDER(sFormName, container, oData));
    }
    return _results;
  };

  JafComponent = (function() {

    function JafComponent() {}

    JafComponent.prototype.EMIT = function(sSignal, oData) {
      return EMIT(sSignal, oData, this);
    };

    JafComponent.prototype.CONNECT = function(sSignal, sSlot) {
      return CONNECT(sSignal, sSlot, this);
    };

    JafComponent.prototype.DISCONNECT = function(sSignal, sSlot) {
      return DISCONNECT(sSignal, sSlot, this);
    };

    JafComponent.prototype.RENDER = function(sFormName, DOMContainer, oData) {
      return RENDER(sFormName.replace('@', this.__name.replace(/\./g, '/') + '/'), DOMContainer, oData);
    };

    JafComponent.prototype.toString = function() {
      return this.__name;
    };

    JafComponent.prototype.__requiredConfig = function(oConfig, aRequiredParams) {
      var param, _i, _len, _results;
      if (typeof oConfig !== typeof {}) {
        oConfig = {};
      }
      _results = [];
      for (_i = 0, _len = aRequiredParams.length; _i < _len; _i++) {
        param = aRequiredParams[_i];
        if (!(param in oConfig)) {
          throw 'Not all required parameters present in ' + this.__name + ' component constructor!\nRequired are: {' + aRequiredParams + '}';
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    JafComponent.prototype.__destroy = function() {
      var conn, _i, _len, _ref;
      _ref = this.connectionList;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        conn = _ref[_i];
        this.DISCONNECT(conn[0], conn[1]);
      }
      if (typeof this._destroy === "function") {
        this._destroy();
      }
      return delete JAFW.running[this.__name][this.UID];
    };

    return JafComponent;

  })();

  JafApplication = (function(_super) {

    __extends(JafApplication, _super);

    function JafApplication() {
      return JafApplication.__super__.constructor.apply(this, arguments);
    }

    JafApplication.prototype.__destroy = function() {
      var conn, _i, _len, _ref;
      _ref = this.connectionList;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        conn = _ref[_i];
        this.DISCONNECT(conn[0], conn[1]);
      }
      if (typeof this._destroy === "function") {
        this._destroy();
      }
      return delete JAFW.running[this.__name][this.UID];
    };

    return JafApplication;

  })(JafComponent);

}).call(this);

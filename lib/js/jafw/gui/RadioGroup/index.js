// Generated by CoffeeScript 1.3.3
(function() {

  CMP('jafw.gui.RadioGroup', {
    _init: function(oConfig) {
      if (!(oConfig != null) || !(oConfig.className != null) || !(oConfig["default"] != null)) {
        throw 'No span class or default value passed. RequiredParams are {className,default}';
      }
      this.onSelect = oConfig.onSelect;
      return this.span(oConfig.className, oConfig["default"], oConfig.scope);
    },
    span: function(sClassName, vInitialVal, DOMScope) {
      var app, el, _i, _len, _ref;
      this.className = sClassName;
      if (!DOMScope) {
        DOMScope = $d;
      }
      this.scope = DOMScope;
      app = this;
      _ref = $a('.' + sClassName, DOMScope);
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        el = _ref[_i];
        addClass(el, 'Toggle');
      }
      addEventBySelector('.' + sClassName, DOMScope, 'click', function() {
        var node, oldNodes, _j, _len1;
        oldNodes = $a('.' + sClassName);
        for (_j = 0, _len1 = oldNodes.length; _j < _len1; _j++) {
          node = oldNodes[_j];
          removeClass(node, 'Toggled');
        }
        addClass(this, 'Toggled');
        return typeof app.onSelect === "function" ? app.onSelect(this, $a('.' + sClassName + ':not(.Toggled)')) : void 0;
      });
      this.toggled = $s('.' + sClassName + '[data-value="' + vInitialVal + '"]', DOMScope);
      addClass(this.toggled, 'Toggled');
      return typeof this.onSelect === "function" ? this.onSelect(this.toggled, $a('.' + sClassName + ':not(.Toggled)', DOMScope)) : void 0;
    }
  });

  CPROPERTY('jafw.gui.RadioGroup.value', {
    get: function() {
      var toggleElement;
      toggleElement = $s('.' + this.className + '.Toggled', this.scope);
      if (hasClass(toggleElement, this.className)) {
        toggleElement.dataset['value'];
        return toggleElement.dataset['value'];
      } else {
        return null;
      }
    },
    set: function(vVal) {
      var toggled;
      toggled = $s('.' + this.className + '[data-value="' + vVal + '"]');
      addUniqueClass(toggled, 'Toggled', this.scope);
      return typeof this.onSelect === "function" ? this.onSelect(toggled, $a('.' + this.className + ':not(.Toggled)', this.scope)) : void 0;
    }
  });

}).call(this);
